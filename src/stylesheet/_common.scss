@function gtkalpha($c,$a) {
  @return unquote("alpha(#{$c},#{$a})");
}

$ease-out-quad: cubic-bezier(0.25, 0.46, 0.45, 0.94);
$asset_suffix: if($variant=='dark', '-dark', '');
$assets: if($contrast=='normal', 'assets', 'assets-hc');
$backdrop_transition: 200ms ease-out;
$button_transition: all 200ms $ease-out-quad;
$focus_transition: outline-width 200ms $ease-out-quad, outline-offset 200ms $ease-out-quad;
$button_radius: 5px;
$menu_radius: 5px;
$menu_margin: $menu_radius; //margin around menuitems & sidebar items
$window_radius: $button_radius + 3;
$popover_radius: $button_radius + 4;

$treeview_borders_color: if($variant=='light',mix($borders_color, $base_color,80%),mix($fg_color, $base_color, 20%));
$treeview_backdrop_borders_color: if($variant=='light',mix($backdrop_borders_color, $base_color, 80%),mix($backdrop_fg_color, $base_color, 20%));

/***************
 * Base States *
 ***************/
.background {
  color: $fg_color;
  background-color: $bg_color;
}

dnd {
  color: $fg-color;
}

.normal-icons {
  -gtk-icon-size: 16px;
}

.large-icons {
  -gtk-icon-size: 32px;
}

.view,
%view {
  color: $text_color;
  background-color: $base_color;

  &:disabled {
    color: $insensitive_fg_color;
    background-color: $insensitive_bg_color;
  }

  &:selected {
    &:focus, & {
      @extend %selected_items;

      border-radius: 3px;
    }
  }
}

textview {
  > text {
    @extend %view;

    > selection { &:focus, & { @extend %selected_items; }}
  }

  > border {
    background-color: mix($bg_color, $base_color, 50%);
  }

  &:drop(active) {
    caret-color: $drop_target_color;
  }
}

iconview {
  @extend .view;

  @include focus-ring();

  &:drop(active) {
    box-shadow: none;
  }

  > dndtarget:drop(active) {
    border-style: solid;
    border-width: 1px;
    border-color: $selected_borders_color;
  }
}

rubberband {
  border: 1px solid darken($selected_bg_color, 10%);
  background-color: transparentize(darken($selected_bg_color, 10%), 0.8);
}

flowbox {
  > flowboxchild {
    padding: 3px;
    transition: $focus_transition;

    @include focus-ring();

    &:selected {
      outline-color: $alt_focus_border_color;

      @extend %selected_items;
    }
  }
}

gridview {
  > child {
    padding: 3px;
    transition: $focus_transition;

    @include focus-ring();

    &:selected {
      outline-color: $alt_focus_border_color;

      @extend %selected_items;
    }

    box { //cells
      border-spacing: 8px; //label separation
      margin: 12px;
    }
  }
}

label {
  @include focus-ring();

  &.separator {
    @extend .dim-label;
  }

  &:selected { @extend %nobg_selected_items; }

  > selection {
    background-color: $selected_bg_color;
    color: $selected_fg_color;
  }

  &:disabled {
    color: $insensitive_fg_color;

    button & { color: inherit; }

    > selection { @extend %selected_items_disabled; }
  }

  &.error {
   color: $error_color;
   &:disabled { color: transparentize($error_color,0.5); }
  }
}

.dim-label {
  opacity: $dim_label_opacity;
}

window.assistant {
  .sidebar {
    padding: $menu-margin;
    border-top: 1px solid $borders_color;
  }

  &.csd .sidebar { border-top-style: none; }

  .sidebar > label { padding: 6px 12px; }

  .sidebar > label.highlight {
    background-color: $menu_selected_color;
    border-radius: $menu-margin;
  }
}

window.aboutdialog image.large-icons {
  -gtk-icon-size: 128px;
}

%osd,
.osd {
  color: $osd_fg_color;
  border: none;
  background-color: $osd_bg_color;
  background-clip: padding-box;
}

/**********************
 * General Typography *
 **********************/

.large-title {
   font-weight: 300;
   font-size: 24pt;
}
.title-1 {
   font-weight: 800;
   font-size: 20pt;
}
.title-2 {
   font-weight: 800;
   font-size: 15pt;
}
.title-3 {
   font-weight: 700;
   font-size: 15pt;
}
.title-4 {
   font-weight: 700;
   font-size: 13pt;
}
.heading {
   font-weight: 700;
   font-size: 11pt;
}
.body {
   font-weight: 400;
   font-size: 11pt;
}
.caption-heading {
   font-weight: 700;
   font-size: 9pt;
}
.caption {
   font-weight: 400;
   font-size: 9pt;
}

/*******************
 * Editable Labels *
 *******************/
editablelabel > stack > text {
  @include entry(normal);
}


/************
 * GtkScale *
 ************/
%scale_trough {
  border: 1px solid $dark_fill;
  border-radius: 3px;
  background-color: $dark_fill;

  headerbar & { background-color: darken($dark_fill,8%); } //3504

  &:disabled {
   background-color: $insensitive_bg_color;
   border-color: $insensitive_borders_color;
  }

  // ...on selected list rows
  row:selected & {
    &:disabled, & {
      outline-color: $alt_focus_border_color;
      border-color: $selected_borders_color;
    }
  }

  // OSD
  .osd & {
    border-color: $osd_borders_color;
    background-color: transparentize($osd_borders_color, 0.2);

    &:disabled { background-color: $osd_insensitive_bg_color; }
  }
}

%scale_highlight {
  border: 1px solid $selected_bg_color;
  border-radius: 3px;
  background-color: $selected_bg_color;

  &:disabled {
    background-color: transparent;
    border-color: transparent;
  }

  // ...on selected list rows
  row:selected & { &:disabled, & { border-color: $selected_borders_color; }}

  // OSD
  .osd & {
    border-color: $osd_borders_color;

    &:disabled { border-color: transparent; }
  }
}

scale {
  // sizing
  $_marks_length: 6px;
  $_marks_distance: 6px;

  min-height: 10px;
  min-width: 10px;
  padding: 12px;

  @include focus-ring("> trough", $offset: 10px);

  > trough {
    transition: $focus_transition;
    @extend %scale_trough;

    // those are inside the trough node, I need them to show their own border over the trough one, so negative margin
    > fill,
    > highlight { margin: -1px; }

    // the colored part of the backing bit
    > highlight { @extend %scale_highlight; }

    // this is another differently styled part of the backing bit, the most relevant use case is for example
    // in media player to indicate how much video stream as been cached
    > fill {
      @extend %scale_trough;

      &:disabled {
        border-color: transparent;
        background-color: transparent;
      }

      // OSD
      .osd & {
        background-color: mix($osd_fg_color, $osd_borders_color, 25%);

        &:disabled {
         border-color: transparent;
         background-color: transparent;
        }
      }
    }

    > slider {
      @include button(normal);
      border-width: 1px;
      border-style: solid;
      border-radius: 100%;
      transition: $button_transition;
      transition-property: background, border, box-shadow;

      // the slider is inside the trough, so to have make it bigger there's a negative margin
      min-height: 18px;
      min-width: 18px;
      margin: -9px;

      &:hover { @include button(hover); }

      &:active { border-color: $selected_borders_color; }

      &:disabled { @include button(insensitive); }

      // ...on selected list rows
      row:selected & { &:disabled, & { border-color: $selected_borders_color; } }

      // OSD
      .osd & {
        @include button(osd);
        border-color: darken($osd_borders_color, 3%);
        background-color: opacify($osd_bg_color, 1); // solid background needed here

        &:hover {
          @include button(osd-hover);
          background-color: opacify($osd_bg_color, 1); // solid background needed here
        }

        &:active {
          @include button(osd-active);
          background-color: opacify($osd_bg_color, 1); // solid background needed here
        }

        &:disabled {
          @include button(osd-insensitive);
          background-color: opacify($osd_bg_color, 1); // solid background needed here
        }
      }
    }
  }

  // click-and-hold the slider to activate
  &.fine-tune {
    &.horizontal {
      padding-top: 9px;
      padding-bottom: 9px;
      min-height: 16px;
    }

    &.vertical {
      padding-left: 9px;
      padding-right: 9px;
      min-width: 16px;
    }

    > trough {
      // to make the trough grow in fine-tune mode
      > slider { margin: -6px; }

      > fill,
      > highlight,
      & {
        border-radius: 5px;
      }
    }
  }

  > value {
    color: gtkalpha(currentColor, 0.55);
    font-feature-settings: "tnum";
  }

  &.horizontal {
    > marks {
      color: gtkalpha(currentColor, 0.55);
      &.top    { margin-bottom: $_marks_distance; }
      &.bottom { margin-top: $_marks_distance; }

      indicator {
        background-color: currentColor;
        min-height: $_marks_length;
        min-width: 1px;
      }
    }

    > value.left  { margin-right: 9px; }
    > value.right { margin-left: 9px; }

    &.fine-tune > marks {
      &.top { margin-top: 3px; }
      &.bottom { margin-bottom: 3px; }

      indicator { min-height: ($_marks_length - 3px); }
    }
  }

  &.vertical {
    > marks {
      color: gtkalpha(currentColor, 0.55);
      &.top    { margin-right: $_marks_distance; }
      &.bottom { margin-left: $_marks_distance; }

      indicator {
        background-color: currentColor;
        min-height: 1px;
        min-width: $_marks_length;
      }
    }

    > value.top    { margin-bottom: 9px; }
    > value.bottom { margin-top: 9px; }

    &.fine-tune > marks {
      &.top { margin-left: 3px; }
      &.bottom { margin-right: 3px; }

      indicator { min-height: ($_marks_length - 3px); }
    }
  }

  // *WARNING* scale with marks madness following

  // FIXME: OSD and selected list rows missing, I don't feel like adding the other 144 assets needed for those...
  $suffix: if($variant == 'light', '', '-dark');

  @each $dir_class, $dir_infix in ('horizontal', 'horz'),
                                  ('vertical', 'vert') {
    @each $marks_infix, $marks_class in ('scale-has-marks-above', 'marks-before:not(.marks-after)'),
                                        ('scale-has-marks-below', 'marks-after:not(.marks-before)') {
      @each $state, $state_infix in ('', ''),
                                    (':hover', '-hover'),
                                    (':active', '-active'),
                                    (':disabled', '-insensitive') {
        &.#{$dir_class}.#{$marks_class} {

          > trough > slider {
            &#{$state} {
              // an asymmetric slider asset is used here, so the margins are uneven, the smaller
              // margin is set on the point side.
              margin: -10px;
              $_scale_asset: '#{$assets}/slider-#{$dir_infix}-#{$marks_infix}#{$state_infix}#{$suffix}';
              border-style: none;
              border-radius: 0;

              background-color: transparent;
              background-image: -gtk-scaled(url('#{$_scale_asset}.png'), url('#{$_scale_asset}@2.png'));

              $_scale_slider_bg_pos: bottom;

              @if $dir_class == 'horizontal' {
                min-height: 26px;
                min-width: 22px;

                @if $marks_infix == 'scale-has-marks-above' {
                  margin-top: -14px;

                  $_scale_slider_bg_pos: top;
                }

                @else { margin-bottom: -14px; }
              }

              @else {
                min-height: 22px;
                min-width: 26px;

                @if $marks_infix == 'scale-has-marks-above' {
                  margin-left: -14px;

                  $_scale_slider_bg_pos: left bottom;
                }

                @else {
                  margin-right: -14px;

                  $_scale_slider_bg_pos: right bottom;
                }
              }

              background-position: $_scale_slider_bg_pos;
              background-repeat: no-repeat;
              box-shadow: none;
            }
          }

          &.fine-tune > trough > slider {
            @if $dir_class == 'horizontal' {
              // bigger negative margins to make the trough grow here as well
              margin: -7px -10px;

              @if $marks_infix == 'scale-has-marks-above' { margin-top: -11px; }

              @else { margin-bottom: -11px; }
            }

            @else {
              margin: -10px -7px;

              @if $marks_infix == 'scale-has-marks-above' { margin-left: -11px; }

              @else { margin-right: -11px; }
            }
          }
        }
      }
    }
  }

  &.color {
    min-height: 0;
    min-width: 0;

    > trough {
      background-image: image($borders_color);
      background-repeat: no-repeat;
    }

    &.horizontal {
      padding: 0 0 15px 0;

      > trough {
        padding-bottom: 4px;
        background-position: 0 -3px;
        border-top-left-radius: 0;
        border-top-right-radius: 0;

        > slider {
          &:dir(ltr), &:dir(rtl) { // specificity bump
            &:hover, &:backdrop, &:disabled, &:backdrop:disabled, & {
              margin-bottom: -15px;
              margin-top: 6px;
            }
          }
        }
      }
    }

    &.vertical {
      &:dir(ltr) {
        padding: 0 0 0 15px;

        > trough {
          padding-left: 4px;
          background-position: 3px 0;
          border-bottom-right-radius: 0;
          border-top-right-radius: 0;

          > slider {
            &:hover, &:backdrop, &:disabled, &:backdrop:disabled, & {
              margin-left: -15px;
              margin-right: 6px;
            }
          }
        }
      }

      &:dir(rtl) {
        padding: 0 15px 0 0;

        > trough {
          padding-right: 4px;
          background-position: -3px 0;
          border-bottom-left-radius: 0;
          border-top-left-radius: 0;

          > slider {
            &:hover, &:backdrop, &:disabled, &:backdrop:disabled, & {
              margin-right: -15px;
              margin-left: 6px;
            }
          }
        }
      }
    }

    &.fine-tune {
      &.horizontal {
        &:dir(ltr), &:dir(rtl) { // specificity bump
          padding: 0 0 12px 0;

          > trough {
            padding-bottom: 7px;
            background-position: 0 -6px;

            > slider {
              margin-bottom: -15px;
              margin-top: 6px;
            }
          }
        }
      }

      &.vertical {
        &:dir(ltr) {
          padding: 0 0 0 12px;

          > trough {
            padding-left: 7px;
            background-position: 6px 0;

            > slider {
              margin-left: -15px;
              margin-right: 6px;
            }
          }
        }

        &:dir(rtl) {
          padding: 0 12px 0 0;

          > trough {
            padding-right: 7px;
            background-position: -6px 0;

            > slider {
              margin-right: -15px;
              margin-left: 6px;
            }
          }
        }
      }
    }
  }
}


/*****************
 * Progress bars *
 *****************/
progressbar {
  // sizing
  &.horizontal {
    > trough {
      min-width: 150px;
      &, > progress { min-height: 2px; }
    }
  }

  &.vertical {
    > trough {
      min-height: 80px;
      &, > progress { min-width: 2px; }
    }
  }

  &.horizontal > trough > progress { margin: 0 -1px; } // the progress node is positioned after the trough border
  &.vertical > trough > progress { margin: -1px 0; }   // this moves it over it.

  // FIXME: insensitive state missing and some other state should be set probably
  font-size: smaller;
  color: transparentize($fg_color, 0.6);
  font-feature-settings: "tnum";

  > trough {
    @extend %scale_trough;

    > progress {
      @extend %scale_highlight; /* share most of scales' */
      /* override insensitive that is specific to progress */
      &:disabled {
        background-color: $insensitive_fg_color;
        border-color: $insensitive_fg_color;
      }

      border-radius: 1.5px;
      $_progress-radius: 5px;
      &.left {
        border-top-left-radius: $_progress-radius;
        border-bottom-left-radius: $_progress-radius;
      }

      &.right {
        border-top-right-radius: $_progress-radius;
        border-bottom-right-radius: $_progress-radius;
      }

      &.top {
        border-top-right-radius: $_progress-radius;
        border-top-left-radius: $_progress-radius;
      }

      &.bottom {
        border-bottom-right-radius: $_progress-radius;
        border-bottom-left-radius: $_progress-radius;
      }
    }
  }

  &.osd { // progressbar.osd used for epiphany page loading progress
    min-width: 3px;
    min-height: 3px;
    background-color: transparent;

    > trough {
      border-style: none;
      border-radius: 0;
      background-color: transparent;
      box-shadow: none;

      > progress {
        border-style: none;
        border-radius: 0;
      }
    }
  }

  > trough.empty > progress { all: unset; } // makes the progress indicator disappear, when the fraction is 0
}

/*************
 * Level Bar *
 *************/

$_levelbar_size: 9px;
$_levelbar_border_radius: 5px;

levelbar {
  &.horizontal {
    trough > block {
      min-height: $_levelbar_size;
      border-radius: $_levelbar_border_radius;

      &:dir(rtl) {
        border-radius: 0 $_levelbar_border_radius $_levelbar_border_radius 0;
      }

      &:dir(ltr) {
        border-radius: $_levelbar_border_radius 0 0 $_levelbar_border_radius;
      }

      &.empty,
      &.full {
        border-radius: $_levelbar_border_radius;
      }
    }

    // segmented level bar
    &.discrete > trough > block {
      min-height: 2px;
      margin: 1px;
      min-width: 24px;
      border-radius: 0;

      &:first-child {
        border-radius: 2px 0 0 2px;
      }

      &:last-child {
        border-radius: 0 2px 2px 0;
      }
    }
  }

  &.vertical {
    trough > block {
      min-width: $_levelbar_size;
      border-radius: $_levelbar_border_radius;
    }

    &.discrete > trough > block {
      min-width: $_levelbar_size - 7px;
      margin: 1px 0;
      min-height: 32px;
    }
  }

  > trough {
    padding: 0;

    // level bar colours
    > block {
      border: 1px solid;

      &.low {
        border-color: $warning_color;
        background-color: $warning_color;
      }

      &.high,
      &:not(.empty) {
        border-color: $selected_bg_color;
        background-color: $selected_bg_color;
      }

      &.full {
        border-color: $success_color;
        background-color: $success_color;
      }

      &.empty {
        background-color: darken($bg_color, 5%);
        border-color: darken($bg_color, 5%);
      }
    }
  }
}


/****************
 * Print dialog *
*****************/
window.dialog.print {
  drawing {
    color: $fg_color;
    background: none;
    border: none;
    padding: 0;

    paper {
      background: white;
      color: #2e3436;
      border: 1px solid $borders_color;
    }
  }

  .dialog-action-box { margin: 12px; }
}


/**********
 * Frames *
 **********/
frame,
.frame {
  border: 1px solid $borders_color;
}

frame {
  border-radius: $window_radius;

  > label {
    margin: 4px;
  }
}

//vbox and hbox separators
separator {
  background: lighten($borders_color, 5%);
  min-width: 1px;
  min-height: 1px;
}


/*********
 * Lists *
 *********/
listview,
list {
  color: $text_color;
  background-color: $base_color;
  border-color: $borders_color;

  &:backdrop {
    color: $backdrop_text_color;
    background-color: $backdrop_base_color;
    border-color: $backdrop_borders_color;
  }

  > row { padding: 2px; }
  > row.expander { padding: 0px; }
  > row.expander .row-header { padding: 2px; }

  &.horizontal row.separator,
  &.separators.horizontal > row:not(.separator) {
    border-left: 1px solid $treeview_borders_color;
  }
  &:not(.horizontal) row.separator,
  &.separators:not(.horizontal) > row:not(.separator) {
    border-bottom: 1px solid $treeview_borders_color;
  }
}

row {
  @include focus-ring();

  &.activatable {
    &.has-open-popup, // this is for indicathing which row generated a popover see https://bugzilla.gnome.org/show_bug.cgi?id=754411

    &:hover { background-color: if(variant == light, transparentize($fg_color, 0.9), transparentize($fg_color, 0.95)); }

    &:active { box-shadow: inset 0 2px 2px -2px transparentize(black, 0.8); }

    &:selected {
      &:active { box-shadow: inset 0 2px 3px -1px transparentize(black, 0.5); }

      &.has-open-popup,
      &:hover { background-color: mix($fg_color, $selected_bg_color, 10%); }
    }
  }

  &:selected {
    outline-color: $alt_focus_border_color;

    @extend %selected_items;
  }
}

/*******************************************************
 * Rich Lists                                          *
 * Large list usually containing lots of widgets       *
 * https://gitlab.gnome.org/GNOME/gtk/-/issues/3073    *
 *******************************************************/


.rich-list { /* rich lists usually containing other widgets than just labels/text */
  & > row {
    padding: 8px 12px;
    min-height: 32px; /* should be tall even when only containing a label */

    & > box {
      border-spacing: 12px;
    }
  }
}

/*********************
 * App Notifications *
 *********************/
.app-notification {
  @extend %osd;

  padding: 10px;
  border-spacing: 10px;
  border-radius: 0 0 5px 5px;
  background-color: $osd_bg_color;
  background-image: linear-gradient(to bottom, transparentize(black, 0.8),
                                               transparent 2px);
  background-clip: padding-box;

  button { @extend %osd_button; }

  border { border: none; }
}


/*************
 * Expanders *
 *************/
expander {
  min-width: 16px;
  min-height: 16px;
  -gtk-icon-source: -gtk-icontheme('pan-end-symbolic');
  &:dir(rtl) { -gtk-icon-source: -gtk-icontheme('pan-end-symbolic-rtl'); }

  &:disabled { color: $insensitive_fg_color; }

  &:checked { -gtk-icon-source: -gtk-icontheme('pan-down-symbolic'); }
}

expander-widget {
  @include focus-ring("> box > title");

  > box > title {
    transition: $focus_transition;
    border-radius: $button_radius;

    &:hover > expander {
      color: lighten($fg_color,30%); //only lightens the icon
    }
  }
}


/************
 * Calendar *
 ***********/
calendar {
  color: $text_color;
  border: 1px solid $borders_color;

  > header {
    border-bottom: 1px solid $borders_color;

    > button {
      border: none;
      box-shadow: none;
      border-radius: 0;

      &, &:backdrop {
        background: none;
      }
    }
  }

  > grid {
    > label.today {
      box-shadow: inset 0px -2px $borders_color;

      &:selected {
        box-shadow: none;
      }
    }

    > label:focus {
      outline-color: $focus_border_color;
      outline-offset: -2px;
      outline-width: 2px;
      outline-style: solid;
    }

    > label.day-number {
      padding: 4px;

      &:selected {
        @extend %selected_items;
        border-radius: 3px;
      }
    }

    > label.day-number.other-month {
      color: gtkalpha(currentColor, 0.3);
    }
  }
}


/***********
 * Dialogs *
 ***********/
window.dialog.message { // Message Dialog styling
  .titlebar {
    min-height: 20px;
    background-image: none;
    background-color: $bg_color;
    border-style: none;
    border-top-left-radius: 7px;
    border-top-right-radius: 7px;
  }

  box.dialog-vbox.vertical {
    border-spacing: 10px;
  }

  & label.title {
    font-weight: 800;
    font-size: 15pt;
  }

  &.csd {
    &.background {
      // bigger radius for better antialiasing
      border-bottom-left-radius: $window_radius+1;
      border-bottom-right-radius: $window_radius+1;
    }

    .dialog-action-area button {
      padding: 10px 14px; // labels are not vertically centered on message dialog, this is a workaround
      border-radius: 0;
      border-left-style: solid;
      border-right-style: none;
      border-bottom-style: none;

      &:first-child {
        border-left-style: none;
        border-bottom-left-radius: 7px;
      }

      &:last-child {
        border-bottom-right-radius: 7px;
      }
    }
  }
}

/***********
 * Sidebar *
 ***********/
.sidebar {
  background-color: mix($bg_color, $base_color, 50%);

  &:not(separator) {
    &:dir(ltr),
    &.left,
    &.left:dir(rtl) {
      border-right: 1px solid $borders_color;
      border-left-style: none;
    }

    &:dir(rtl),
    &.right {
      border-left: 1px solid $borders_color;
      border-right-style: none;
    }
  }

  listview.view,
  list { background-color: transparent; }

  paned & { &.left, &.right, &.left:dir(rtl), &:dir(rtl), &:dir(ltr), & { border-style: none; }}
}

stacksidebar row {
  padding: 10px 4px;
  @include focus-ring();

  > label {
    padding-left: 6px;
    padding-right: 6px;
  }

  &.needs-attention > label {
    @extend %needs_attention;
    background-size: 6px 6px, 0 0;
  }

  &:selected {
    background-color: $menu_selected_color;
    border-radius: $menu_radius;
    color: $fg_color;

    &:hover {
      background-color: darken($menu_selected_color, 5%);
    }
  }

  &.activatable:active,
  &.activatable:selected:active {
    box-shadow: none; // #3413
  }
}

separator.sidebar {
  background-color: $borders_color;
}


/**********************
 * Navigation Sidebar *
 **********************/

.navigation-sidebar {
  padding: $menu-margin 0; //only vertical padding. horizontal row size would clip

  > separator {
    margin: $menu-margin;
  }

  > row {
    min-height: 36px;
    padding: 0 8px;
    border-radius: $menu-margin;
    margin: 0 $menu-margin 2px;
    @include focus-ring($focus-state: 'focus-visible:focus-within');

    &:hover {
      background-color: darken($menu_selected_color, 5%);
    }

    &:selected {
      background-color: $menu_selected_color;
      color: inherit;

      &:hover {
        background-color: darken($menu_selected_color,5%);
      }
    }

    &:disabled { color: $insensitive_fg_color; }
  }
}


/****************
 * File chooser *
 ****************/

$_placesidebar_icons_opacity: 0.7;

row image.sidebar-icon { opacity: $_placesidebar_icons_opacity; } // dim the sidebar icons
                                                                  // see bug #786613 for details
                                                                  // on this oddity

/* this should be more generic, only using .navigation-sidebar
   https://gitlab.gnome.org/GNOME/gtk/-/issues/2929
*/

placessidebar {
  .navigation-sidebar > row {
    // Needs overriding of the `.navigation-sidebar > row` padding
    padding: 0;

    // Using margins/padding directly in the SidebarRow
    // will make the animation of the new bookmark row jump
    > revealer { padding: 0 14px; }

    image.sidebar-icon {
      &:dir(ltr) { padding-right: 8px; }
      &:dir(rtl) { padding-left: 8px; }
    }

    label.sidebar-label {
      &:dir(ltr) { padding-right: 2px; }
      &:dir(rtl) { padding-left: 2px; }
    }

    @at-root button.sidebar-button {
      @extend %button_basic_flat;

      @extend %button_selected_flat;
      min-height: 26px;
      min-width: 26px;
      margin-top: 3px;
      margin-bottom: 3px;
      padding: 0;
      border-radius: 100%;
    }

    // in the sidebar case it makes no sense to click the selected row
    &:selected:active { box-shadow: none; }

    &.sidebar-placeholder-row {
      padding: 0 8px;
      min-height: 2px;
      background-image: image($drop_target_color);
      background-clip: content-box;
    }

    &.sidebar-new-bookmark-row { color: $selected_bg_color; }

    &:drop(active):not(:disabled) {
      color: $drop_target_color;
      box-shadow: inset 0 1px $drop_target_color,
                  inset 0 -1px $drop_target_color;

      &:selected {
        color: $selected_fg_color;
        background-color: $drop_target_color;
      }
    }
  }
}

placesview {
  .server-list-button > image {
    transition: 200ms $ease-out-quad;
    -gtk-icon-transform: rotate(0turn);
  }

  .server-list-button:checked > image {
    transition: 200ms $ease-out-quad;
    -gtk-icon-transform: rotate(-0.5turn);
  }

  row.activatable:hover {  }

  > actionbar > revealer > box  > box{
    border-spacing: 6px;
  }
}

filechooser {
  .dialog-action-box {
    border-top: 1px solid $borders_color;
  }

  #pathbarbox { border-bottom: 1px solid $bg_color; }

  pathbar > button {
    &.text-button, &.image-button, & {
      padding-left: 4px;
      padding-right: 4px;
    }

    &.text-button.image-button label {
      padding-left: 0;
      padding-right: 0;
    }

    &.text-button.image-button, & {
      label:last-child { padding-right: 8px; }
      label:first-child { padding-left: 8px; }
    }

    image {
      padding-left: 4px;
      padding-right: 4px;
    }

    &.slider-button {
      padding-left: 0;
      padding-right: 0;
    }
  }
}


/*********
 * Paned *
 *********/
paned {
  > separator {
    min-width: 1px;
    min-height: 1px;
    -gtk-icon-source: none; // defeats the ugly default handle decoration
    border-style: none; // just to be sure
    background-color: transparent;
    // workaround, using background instead of a border since the border will get rendered twice (?)
    background-image: image($borders_color);
    background-size: 1px 1px;

    &:selected { background-image: image($selected_bg_color); } // FIXME is this needed?

    &.wide {
      min-width: 5px;
      min-height: 5px;
      background-color: $bg_color;
      background-image: image($borders_color), image($borders_color);
      background-size: 1px 1px, 1px 1px;
    }
  }

  &.horizontal > separator {
    background-repeat: repeat-y;

    &:dir(ltr) {
      margin: 0 -8px 0 0;
      padding: 0 8px 0 0;
      background-position: left;
    }
    &:dir(rtl) {
      margin: 0 0 0 -8px;
      padding: 0 0 0 8px;
      background-position: right;
    }

    &.wide {
      margin: 0;
      padding: 0;
      background-repeat: repeat-y, repeat-y;
      background-position: left, right;
    }
  }

  &.vertical > separator {
    margin: 0 0 -8px 0;
    padding: 0 0 8px 0;
    background-repeat: repeat-x;
    background-position: top;

    &.wide {
      margin: 0;
      padding: 0;
      background-repeat: repeat-x, repeat-x;
      background-position: bottom, top;
    }
  }
}


/**************
 * GtkVideo *
 **************/

video {
  & image.osd {
    min-width: 64px;
    min-height: 64px;
    border-radius: 32px;
  }
  background: black;
}

/************
 * Tooltips *
 ************/
tooltip {
  &.background {
    // background-color needs to be set this way otherwise it gets drawn twice
    // see https://bugzilla.gnome.org/show_bug.cgi?id=736155 for details.
    background-color: transparentize(black, 0.2);
    background-clip: padding-box;
    border: 1px solid $tooltip_borders_color; // this subtle border is meant to
                                              // not make the tooltip melt with
                                              // very dark backgrounds
    color: white;
  }

  &.csd {
    border-radius: 5px;
    box-shadow: none;
  }

  padding: 6px 10px;
  border-radius: $window_radius;
  box-shadow: none; // otherwise it gets inherited by windowframe.csd

  > box {
    border-spacing: 6px;
  }
}


/*****************
 * Color Chooser *
 *****************/
colorswatch {
  // This widget is made of two boxes one on top of the other, the lower box is colorswatch {} the other one
  // is colorswatch overlay {}, colorswatch has the programmatically set background, so most of the style is
  // applied to the overlay box.

  transition: $focus_transition;

  @include focus-ring($width: 4px, $offset: -2px);

  &:drop(active), & { border-style: none; } // FIXME: implement a proper drop(active) state

  $_colorswatch_radius: 5px;

  // base color corners rounding
  // to avoid the artifacts caused by rounded corner anti-aliasing the base color
  // sports a bigger radius.
  // nth-child is needed by the custom color strip.

  &.top {
    border-top-left-radius: $_colorswatch_radius + 0.5px;
    border-top-right-radius: $_colorswatch_radius + 0.5px;

    > overlay {
      border-top-left-radius: $_colorswatch_radius;
      border-top-right-radius: $_colorswatch_radius;
    }
  }

  &.bottom {
    border-bottom-left-radius: $_colorswatch_radius + 0.5px;
    border-bottom-right-radius: $_colorswatch_radius + 0.5px;

    > overlay {
      border-bottom-left-radius: $_colorswatch_radius;
      border-bottom-right-radius: $_colorswatch_radius;
    }
  }

  &.left,
  &:first-child:not(.top) {
    border-top-left-radius: $_colorswatch_radius + 0.5px;
    border-bottom-left-radius: $_colorswatch_radius + 0.5px;

    > overlay {
      border-top-left-radius: $_colorswatch_radius;
      border-bottom-left-radius: $_colorswatch_radius;
    }
  }

  &.right,
  &:last-child:not(.bottom) {
    border-top-right-radius: $_colorswatch_radius + 0.5px;
    border-bottom-right-radius: $_colorswatch_radius + 0.5px;

    > overlay {
      border-top-right-radius: $_colorswatch_radius;
      border-bottom-right-radius: $_colorswatch_radius;
    }
  }

  &.dark {
    > overlay {
      color: white;
    }

    &.activatable:hover > overlay {
      border-color: if($variant == 'light', transparentize(black, 0.2), $borders_color);
    }
  }

  &.light {
    > overlay {
      color: black;
    }

    &.activatable:hover > overlay {
      border-color: if($variant == 'light', transparentize(black, 0.5), $borders_color);
    }
  }

  &:drop(active) {
    box-shadow: none;

    &.light > overlay {
      border-color: $drop_target_color;
      box-shadow: inset 0 0 0 2px if($variant == 'light', darken($drop_target_color, 7%), $borders_color),
                  inset 0 0 0 1px $drop_target_color;
    }

    &.dark > overlay {
      border-color: $drop_target_color;
      box-shadow: inset 0 0 0 2px if($variant == 'light', transparentize(black, 0.7), $borders_color),
                  inset 0 0 0 1px $drop_target_color;
    }
  }

  > overlay {
    border: 1px solid if($variant == 'light', transparentize(black, 0.7), $borders_color);
  }

  &.activatable:hover > overlay {
    box-shadow: inset 0 1px transparentize(white, 0.6),
                inset 0 -1px transparentize(black, 0.8);
  }

  &#add-color-button {
    border-radius: $_colorswatch_radius 0 0 $_colorswatch_radius;

    &:only-child { border-radius: $_colorswatch_radius; }

    > overlay {
      @include button(normal);
    }

    &.activatable:hover > overlay {
      @include button(hover);
    }
  }

  &:disabled {
    opacity: 0.5;

    > overlay {
      border-color: transparentize(black, 0.4);
      box-shadow: none;
    }
  }

  row:selected & { box-shadow: 0 0 0 2px $selected_fg_color; }

  &#editor-color-sample {
    border-radius: 4px;

    > overlay { border-radius: 4.5px; }
  }
}

plane {
  transition: $focus_transition;

  @include focus-ring($offset: 2px, $outer: true);
}

// colorscale popup
colorchooser .popover.osd { border-radius: 5px; }


/********
 * Misc *
 ********/
.content-view {
  background-color: darken($bg_color,7%);
}

.scale-popup {
  .osd & { @extend %osd; }

  .osd & button.flat {  //FIXME: quick hack, redo properly
    border-style: none;
    border-radius: 5px;
  }

  button { // +/- buttons on GtkVolumeButton popup
    &:hover {
      @extend %undecorated_button;
      background-color: transparentize($fg_color,0.9);
      border-radius: 5px;
    }
  }
}


/**********************
 * Window Decorations *
 *********************/
window {
  // lamefun trick to get rounded borders regardless of CSD use
  border-width: 0px;

  // this needs to be transparent
  // see bug #722563
  $_wm_border: if($variant=='light', transparentize(black, 0.77), transparentize(black, 0.25));
  $_wm_border_backdrop: if($variant=='light', transparentize(black, 0.82), transparentize(black, 0.25));

  &.csd {
    box-shadow: 0 3px 9px 1px transparentize(black, 0.5),
                0 0 0 1px $_wm_border; //doing borders with box-shadow
    margin: 0px;
    border-radius: $window_radius;
    &:backdrop {
      // the transparent shadow here is to enforce that the shadow extents don't
      // change when we go to backdrop, to prevent jumping windows.
      // The biggest shadow should be in the same order then in the active state
      // or the jumping will happen during the transition.
      box-shadow: 0 3px 9px 1px transparent,
                  0 2px 6px 2px transparentize(black, 0.8),
                  0 0 0 1px $_wm_border_backdrop;
      transition: $backdrop_transition;
    }

    &.dialog.message {
      box-shadow: 0 1px 2px transparentize(black, 0.8),
                  0 0 0 1px transparentize($_wm_border, 0.1);
    }

    &.solid-csd {
      margin: 0;
      padding: 0;
      border: solid 1px $borders_color;
      border-radius: 0;
      box-shadow: inset 0 0 0 3px $headerbar_bg_color, inset 0 1px $top_hilight;

      &:backdrop { box-shadow: inset 0 0 0 3px $backdrop_bg_color, inset 0 1px $top_hilight; }
    }
  }

  &.maximized,
  &.fullscreen { border-radius: 0; box-shadow: none; }

  &.tiled,
  &.tiled-top,
  &.tiled-left,
  &.tiled-right,
  &.tiled-bottom {
   border-radius: 0;
   box-shadow: 0 0 0 1px $_wm_border_backdrop,
               0 0 0 20px transparent; //transparent control workaround -- #3670
   }
   &:backdrop { box-shadow: 0 0 0 1px $_wm_border_backdrop,
                            0 0 0 20px transparent; // #3670
  }

  // server-side decorations as used by mutter
  &.ssd { box-shadow: 0 0 0 1px $_wm_border; } //just doing borders, wm draws actual shadows
}

// catch all extend :)

%selected_items {
  background-color: $selected_bg_color;

  @at-root %nobg_selected_items, & {
    color: $selected_fg_color;

    @at-root %selected_items_disabled,
    &:disabled { color: mix($selected_fg_color, $selected_bg_color, 50%); }

  }
}

.monospace { font-family: monospace; }

:not(window):drop(active):focus,
:not(window):drop(active) { // FIXME needs to be done widget by widget, this wildcard should really die
  border-color: $drop_target_color;
  box-shadow: inset 0 0 0 1px $drop_target_color;
  caret-color: $drop_target_color;
}

.navigation-sidebar,
placessidebar,
stackswitcher,
expander-widget {
  :not(window):drop(active):focus,
  :not(window):drop(active) {
    box-shadow: none;
  }
}


/**********************
 * Touch Copy & Paste *
 *********************/
//touch selection handlebars for the Popover.osd above
cursor-handle {
  background-color: transparent;
  background-image: none;
  box-shadow: none;
  border-style: none;
  min-width: 20px;
  min-height: 24px;
  padding-left: 20px;
  padding-right: 20px;
  padding-top: 24px;
  padding-bottom: 24px;

  @each $s,$as in ('',''),
                  (':hover','-hover'),
                  (':active','-active') { //no need for insensitive and backdrop
    &.top#{$s}:dir(ltr), &.bottom#{$s}:dir(rtl) {
      $_url: '#{$assets}/text-select-start#{$as}#{$asset_suffix}';
      -gtk-icon-source: -gtk-scaled(url('#{$_url}.png'),
                                    url('#{$_url}@2.png'));
    }

    &.bottom#{$s}:dir(ltr), &.top#{$s}:dir(rtl) {
      $_url: '#{$assets}/text-select-end#{$as}#{$asset_suffix}';
      -gtk-icon-source: -gtk-scaled(url('#{$_url}.png'),
                                    url('#{$_url}@2.png'));
    }

    &.insertion-cursor#{$s}:dir(ltr), &.insertion-cursor#{$s}:dir(rtl) {
      $_url: '#{$assets}/slider-horz-scale-has-marks-above#{$as}#{$asset_suffix}';
      -gtk-icon-source: -gtk-scaled(url('#{$_url}.png'),
                                    url('#{$_url}@2.png'));
    }
  }
}


/********************
 * Shortcuts Window *
 ********************/
shortcuts-section {
  margin: 20px;
}

.shortcuts-search-results {
  margin: 20px;
  border-spacing: 24px;
}

// shortcut window keys
shortcut {
  border-spacing: 6px;

  > .keycap {
    min-width: 20px;
    min-height: 25px;
    margin-top: 2px;
    padding-bottom: 3px;
    padding-left: 6px;
    padding-right: 6px;

    color: $fg_color;
    background-color: $base_color;
    border: 1px solid;
    border-color: if($variant == 'light', mix($borders_color, $bg_color, 50%), $borders_color);
    border-radius: 5px;
    box-shadow: if($variant == 'light', inset 0 -3px mix($base_color, $bg_color, 20%), inset 0 -3px mix($borders_color, $base_color, 60%));
    font-size: smaller;
  }
}

stackswitcher > button.text-button { min-width: 100px; } // FIXME aggregate with buttons

stackswitcher.circular {
  border-spacing: 12px;

  // FIXME aggregate with buttons
  > button.circular,
  > button.text-button.circular {
    min-width: 32px;
    min-height: 32px;
    padding: 0;
  }
}

/*************
 * App Icons *
 *************/
/* Outline for low res icons */
.lowres-icon {
    -gtk-icon-shadow: 0 -1px rgba(0,0,0,0.05),
      1px 0 rgba(0,0,0,0.1),
      0 1px rgba(0,0,0,0.3),
      -1px 0 rgba(0,0,0,0.1);
}

/* Drapshadow for large icons */
.icon-dropshadow {
  -gtk-icon-shadow: 0 1px 12px rgba(0,0,0,0.05),
      0 -1px rgba(0,0,0,0.05),
      1px 0 rgba(0,0,0,0.1),
      0 1px rgba(0,0,0,0.3),
      -1px 0 rgba(0,0,0,0.1);
}

/*********
 * Emoji *
 ********/

popover.emoji-picker > contents,
popover.entry-completion > contents {
  padding: 0;
}

.emoji-searchbar {
  padding: 6px;
  border-spacing: 6px;
  border-bottom: 1px solid $borders_color;
}

.emoji-toolbar {
  padding: 6px;
  border-spacing: 6px;
  border-top: 1px solid $borders_color;
}

button.emoji-section {
  border-color: transparent;
  border-width: 3px;
  border-style: none none solid;
  border-radius: 0;

  padding: 3px 0 0;
  min-width: 32px;
  min-height: 28px;

  /* reset props inherited from the button style */
  background: none;
  box-shadow: none;

  &:hover { border-color: if($variant == 'light', $borders_color, transparentize($fg_color, .9)); }
  &:checked { border-color: $selected_bg_color; }
}

popover.emoji-picker emoji {
  font-size: x-large;
  padding: 6px;
  border-radius: 6px;

  &:focus,
  &:hover {
    background: $selected_bg_color;
  }
}

emoji-completion-row {
   > box {
    border-spacing: 10px;
    padding: 2px 10px;
  }

  :focus,
  :hover {
    background-color: $selected_bg_color;
    color: $selected_fg_color;
  }

  emoji:focus,
  emoji:hover {
    background-color: $menu_selected_color;
  }
}

statusbar {
  padding: 6px 10px 6px 10px;
}

@import 'widgets';
@import 'custom';
